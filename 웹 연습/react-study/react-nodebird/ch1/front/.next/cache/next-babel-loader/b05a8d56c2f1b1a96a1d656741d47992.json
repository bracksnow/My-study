{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\82108\\\\WebstormProjects\\\\react-nodebird\\\\ch1\\\\front\\\\pages\\\\_app.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport withRedux from 'next-redux-wrapper';\nimport reducer from '../reducers'; //index.js를 의미함->생략\n\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from \"redux\"; //provider가 redux의 state를 제공함\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return __jsx(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(Component, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })));\n}; //node는 리액트에 들어갈 수 있는 모든 것을 node라고 표시함\n\n\n_c = NodeBird;\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object\n};\nexport default withRedux(function (initialState, options) {\n  //_app에 store를 넣어주는 역할\n  var middlewares = [];\n  var enhancer = compose(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, initialState, enhancer);\n  return store;\n})(NodeBird);\n\nvar _c;\n\n$RefreshReg$(_c, \"NodeBird\");","map":{"version":3,"sources":["C:/Users/82108/WebstormProjects/react-nodebird/ch1/front/pages/_app.js"],"names":["React","Head","PropTypes","AppLayout","withRedux","reducer","Provider","createStore","compose","applyMiddleware","NodeBird","Component","store","propTypes","elementType","isRequired","object","initialState","options","middlewares","enhancer"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,aAApB,C,CAAkC;;AAClC,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,QAAoD,OAApD,C,CACA;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACvC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAIA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,6DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,GAAG,EAAC,4DAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ;AAYH,CAbD,C,CAcA;;;KAdMF,Q;AAeNA,QAAQ,CAACG,SAAT,GAAqB;AACjBF,EAAAA,SAAS,EAAET,SAAS,CAACY,WAAV,CAAsBC,UADhB;AAEjBH,EAAAA,KAAK,EAACV,SAAS,CAACc;AAFC,CAArB;AAIA,eAAeZ,SAAS,CAAC,UAACa,YAAD,EAAeC,OAAf,EAAyB;AAAC;AAE/C,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,QAAQ,GAAGZ,OAAO,CAACC,eAAe,MAAf,SAAmBU,WAAnB,CAAD,CAAxB;AACA,MAAMP,KAAK,GAAGL,WAAW,CAACF,OAAD,EAAUY,YAAV,EAAwBG,QAAxB,CAAzB;AACA,SAAOR,KAAP;AACH,CANuB,CAAT,CAMZF,QANY,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport AppLayout from '../components/AppLayout';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport reducer from '../reducers';//index.js를 의미함->생략\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, compose, applyMiddleware} from \"redux\";\r\n//provider가 redux의 state를 제공함\r\n\r\n\r\nconst NodeBird = ({ Component, store }) => {\r\n    return (\r\n        <Provider store = {store}>\r\n            <Head>\r\n                <title>NodeBird</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.css\" />\r\n                <script src=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.js\"></script>\r\n            </Head>\r\n            <AppLayout>\r\n                <Component />\r\n            </AppLayout>\r\n        </Provider>\r\n    );\r\n}\r\n//node는 리액트에 들어갈 수 있는 모든 것을 node라고 표시함\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType.isRequired,\r\n    store:PropTypes.object\r\n};\r\nexport default withRedux((initialState, options)=>{//_app에 store를 넣어주는 역할\r\n    \r\n    const middlewares = [];\r\n    const enhancer = compose(applyMiddleware(...middlewares));\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    return store;\r\n})(NodeBird);"]},"metadata":{},"sourceType":"module"}