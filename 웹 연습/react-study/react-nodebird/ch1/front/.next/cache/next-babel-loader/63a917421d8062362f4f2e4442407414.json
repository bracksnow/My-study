{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82108\\\\WebstormProjects\\\\react-nodebird\\\\ch1\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\n\nconst Signup = () => {\n  //const [id,setId] = useState('');\n  const {\n    0: nick,\n    1: setNick\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false); //props로 넘겨누는 함수들을 usecallback으로 묶어줘야함->state값이 변경되어 처음부터 랜더링하기 때문에 계속 함수객체가 생성되기 때문\n\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n  }, [password, passwordError, termError]);\n  /*const onChangeId = (e) => {\r\n      setId(e.target.value);\r\n  };*/\n\n  const onChangeNick = useCallback(e => {\n    setNick(e.target.value);\n  }, [nick]);\n  const onChangePassword = useCallback(e => {\n    setPassword(e.target.value);\n  }, [password]);\n  const onChangePasswordChk = useCallback(e => {\n    //비밀번호를 입력할때마다 password 를 검증하는 함수\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password, passwordCheck]);\n  const onChangeTerm = useCallback(e => {\n    //체크박스 초기화\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, [termError, term]);\n\n  const useInput = (initialValue = null) => {\n    //커스텀 훅->반복되는 것을 줄일 수 있음\n    const {\n      0: value,\n      1: setter\n    } = useState(initialValue);\n    const handler = useCallback(e => {\n      setter(e.preventDefault());\n    }, []);\n    return [value, handler];\n  };\n\n  const [id, onChangeId] = useInput('');\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 57\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 59\n    }\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 64\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 72\n    }\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordChk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 39\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"\\uB3D9\\uC758\\uD569\\uB2C8\\uAE4C?\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 35\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/82108/WebstormProjects/react-nodebird/ch1/front/pages/signup.js"],"names":["React","useState","useCallback","Form","Input","Button","Checkbox","Signup","nick","setNick","password","setPassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","onSubmit","e","preventDefault","onChangeNick","target","value","onChangePassword","onChangePasswordChk","onChangeTerm","checked","useInput","initialValue","setter","handler","id","onChangeId","padding","color","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA6C,MAA7C;;AAEA,MAAMC,MAAM,GAAG,MAAK;AAChB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAMC;AAAN,MAAiBR,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM;AAAA,OAACS,QAAD;AAAA,OAAUC;AAAV,MAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACW,aAAD;AAAA,OAAeC;AAAf,MAAmCZ,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM;AAAA,OAACa,IAAD;AAAA,OAAMC;AAAN,MAAiBd,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM;AAAA,OAACe,aAAD;AAAA,OAAeC;AAAf,MAAmChB,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM;AAAA,OAACiB,SAAD;AAAA,OAAWC;AAAX,MAA2BlB,QAAQ,CAAC,KAAD,CAAzC,CAPgB,CAQhB;;AACA,QAAMmB,QAAQ,GAAGlB,WAAW,CAAEmB,CAAD,IAAM;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGZ,QAAQ,KAAGE,aAAd,EAA4B;AACxB,aAAOK,gBAAgB,CAAC,IAAD,CAAvB;AACH;;AACD,QAAG,CAACH,IAAJ,EAAS;AACL,aAAOK,YAAY,CAAC,IAAD,CAAnB;AACH;AACJ,GAR2B,EAQ1B,CAACT,QAAD,EAAWM,aAAX,EAA0BE,SAA1B,CAR0B,CAA5B;AASA;;;;AAGA,QAAMK,YAAY,GAAGrB,WAAW,CAAEmB,CAAD,IAAO;AACpCZ,IAAAA,OAAO,CAACY,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE7B,CAACjB,IAAD,CAF6B,CAAhC;AAGA,QAAMkB,gBAAgB,GAAGxB,WAAW,CAAEmB,CAAD,IAAO;AACxCV,IAAAA,WAAW,CAACU,CAAC,CAACG,MAAF,CAASC,KAAV,CAAX;AACH,GAFmC,EAEjC,CAACf,QAAD,CAFiC,CAApC;AAGA,QAAMiB,mBAAmB,GAAGzB,WAAW,CAAEmB,CAAD,IAAO;AAC3C;AACAJ,IAAAA,gBAAgB,CAACI,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmBf,QAApB,CAAhB;AACAG,IAAAA,gBAAgB,CAACQ,CAAC,CAACG,MAAF,CAASC,KAAV,CAAhB;AACH,GAJsC,EAIpC,CAACf,QAAD,EAAWE,aAAX,CAJoC,CAAvC;AAKA,QAAMgB,YAAY,GAAG1B,WAAW,CAAEmB,CAAD,IAAO;AACpC;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,IAAAA,OAAO,CAACM,CAAC,CAACG,MAAF,CAASK,OAAV,CAAP;AACH,GAJ+B,EAI9B,CAACX,SAAD,EAAYJ,IAAZ,CAJ8B,CAAhC;;AAKA,QAAMgB,QAAQ,GAAG,CAACC,YAAY,GAAG,IAAhB,KAAwB;AAAC;AACtC,UAAM;AAAA,SAACN,KAAD;AAAA,SAAQO;AAAR,QAAkB/B,QAAQ,CAAC8B,YAAD,CAAhC;AACA,UAAME,OAAO,GAAG/B,WAAW,CAAEmB,CAAD,IAAM;AAC9BW,MAAAA,MAAM,CAACX,CAAC,CAACC,cAAF,EAAD,CAAN;AACH,KAF0B,EAEzB,EAFyB,CAA3B;AAGA,WAAO,CAACG,KAAD,EAAQQ,OAAR,CAAP;AACH,GAND;;AAOA,QAAM,CAACC,EAAD,EAAKC,UAAL,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;AACA,SACI,4BACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEV,QAAhB;AAA0B,IAAA,KAAK,EAAE;AAACgB,MAAAA,OAAO,EAAC;AAAT,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxC,EAEI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEF,EAA7B;AAAiC,IAAA,QAAQ,MAAzC;AAA0C,IAAA,QAAQ,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,EAEI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,EAAE3B,IAA/B;AAAqC,IAAA,QAAQ,MAA7C;AAA8C,IAAA,QAAQ,EAAEe,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAC+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/C,EAEI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,IAAI,EAAC,UAAjC;AAA4C,IAAA,KAAK,EAAEb,QAAnD;AAA6D,IAAA,QAAQ,MAArE;AAAsE,IAAA,QAAQ,EAAEgB,gBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EACuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvD,EAEI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,qBAAZ;AAAkC,IAAA,IAAI,EAAC,UAAvC;AAAkD,IAAA,KAAK,EAAEd,aAAzD;AAAwE,IAAA,QAAQ,MAAhF;AAAiF,IAAA,QAAQ,EAAEe,mBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKX,aAAa,IAAI;AAAK,IAAA,KAAK,EAAE;AAACqB,MAAAA,KAAK,EAAG;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAHtB,CAbJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEvB,IAApC;AAA0C,IAAA,QAAQ,EAAEc,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEKV,SAAS,IAAI;AAAK,IAAA,KAAK,EAAE;AAACmB,MAAAA,KAAK,EAAG;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAFlB,CAlBJ,EAsBI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CAtBJ,CADJ,CADJ;AA8BH,CA3ED;;AA6EA,eAAe/B,MAAf","sourcesContent":["import React, {useState, useCallback} from 'react';\r\nimport {Form, Input , Button, Checkbox} from 'antd';\r\n\r\nconst Signup = () =>{\r\n    //const [id,setId] = useState('');\r\n    const [nick,setNick] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [passwordCheck,setPasswordCheck] = useState('');\r\n    const [term,setTerm] = useState(false);\r\n    const [passwordError,setPasswordError] = useState(false);\r\n    const [termError,setTermError] = useState(false);\r\n    //props로 넘겨누는 함수들을 usecallback으로 묶어줘야함->state값이 변경되어 처음부터 랜더링하기 때문에 계속 함수객체가 생성되기 때문\r\n    const onSubmit = useCallback((e) =>{\r\n        e.preventDefault();\r\n        if(password!==passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        if(!term){\r\n            return setTermError(true);\r\n        }\r\n    },[password, passwordError, termError])\r\n    /*const onChangeId = (e) => {\r\n        setId(e.target.value);\r\n    };*/\r\n    const onChangeNick = useCallback((e) => {\r\n        setNick(e.target.value);\r\n    }, [nick]);\r\n    const onChangePassword = useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    }, [password]);\r\n    const onChangePasswordChk = useCallback((e) => {\r\n        //비밀번호를 입력할때마다 password 를 검증하는 함수\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }, [password, passwordCheck]);\r\n    const onChangeTerm = useCallback((e) => {\r\n        //체크박스 초기화\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    },[termError, term]);\r\n    const useInput = (initialValue = null) =>{//커스텀 훅->반복되는 것을 줄일 수 있음\r\n        const [value, setter] = useState(initialValue);\r\n        const handler = useCallback((e) =>{\r\n            setter(e.preventDefault());\r\n        },[]);\r\n        return [value, handler];\r\n    }\r\n    const [id, onChangeId] = useInput('');\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{padding:10}}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label><br/>\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label><br/>\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label><br/>\r\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label><br/>\r\n                    <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordChk} />\r\n                    {passwordError && <div style={{color : 'red'}}>비밀번호가 일치하지 않습니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>동의합니까?</Checkbox>\r\n                    {termError && <div style={{color : 'red'}}>약관에 동의해야 합니다.</div>}\r\n                </div>\r\n                <div style={{marginTop:10}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" >가입하기</Button>\r\n                </div>\r\n                </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}